rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funcție helper pentru a verifica dacă utilizatorul este admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Colecția "usernames": poate fi citită de oricine (dacă e publică), dar scrisă doar de userul autentificat
    match /usernames/{username} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }

    // Colecția "users": fiecare user își poate citi/modifica propriul document
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }

    // Colecția "posts": doar userul care a creat postarea poate scrie/modifica/șterge
    match /posts/{postId} {
      allow read: if true; // sau mai strict: doar dacă postarea e publică
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null &&
                             (request.auth.uid == resource.data.userId || isAdmin());
    }

    // Colecția "userImages": doar userul care a încărcat imaginea poate modifica/șterge
    match /userImages/{imageId} {
      allow read: if request.auth != null && (
        // Poți adapta regula pentru a permite vizualizare publică a imaginilor
        resource.data.userId == request.auth.uid || isAdmin()
      );

      allow create: if request.auth != null &&
                    request.resource.data.userId == request.auth.uid;

      allow update, delete: if request.auth != null &&
                            (resource.data.userId == request.auth.uid || isAdmin());
    }

    // Colecția "moderators": doar adminii pot gestiona moderatori
    match /moderators/{moderatorId} {
      allow read: if request.auth != null && (isAdmin() || resource.data.id == request.auth.uid);
      allow create: if request.auth != null && isAdmin();
      allow update: if request.auth != null && (isAdmin() || resource.data.id == request.auth.uid);
      allow delete: if request.auth != null && isAdmin();
    }
  }
} 